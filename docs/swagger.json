{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "web app for movies catalog",
        "title": "movies catalog",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/movies": {
            "get": {
                "description": "get movies from catalog",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "get movies",
                "operationId": "movies-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "movie title or description, may be incomplete",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "element count limit in movies list",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset in movies list",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/view.MoviesResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "create movie in catalog",
                "tags": [
                    "movie"
                ],
                "summary": "update movie",
                "operationId": "movie-put",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "movie for update",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movie_put.updateMovieRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create movie in catalog",
                "tags": [
                    "movie"
                ],
                "summary": "create movie",
                "operationId": "movie-post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "movie for create",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movie_post.createMovieRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/comments": {
            "post": {
                "description": "create comment for movie",
                "tags": [
                    "comment"
                ],
                "summary": "create comment",
                "operationId": "comment-post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "comment for create",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment_post.createCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/comments/{id}": {
            "delete": {
                "description": "delete comment for movie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "delete comment",
                "operationId": "comment-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "description": "get movie by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "get movie",
                "operationId": "movie-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "movie id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/view.Movie"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete movie from catalog",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "delete movie",
                "operationId": "movie-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "movie id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{id}/comments": {
            "get": {
                "description": "get comments for movie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "get comments",
                "operationId": "comments-get",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/view.CommentsResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/code": {
            "post": {
                "description": "get token after success login user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "confirm code by user",
                "operationId": "user-code-post",
                "parameters": [
                    {
                        "description": "code and state for login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_code_confirm_post.confirmCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/view.Token"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "get code after enter login and password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "login user",
                "operationId": "user-login-post",
                "parameters": [
                    {
                        "description": "username and password for login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_login_post.loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/view.State"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/password": {
            "put": {
                "description": "get code after change password password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "user change password",
                "operationId": "user-pass-put",
                "parameters": [
                    {
                        "description": "username, password  and new password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_change_password_put.userChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/view.State"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/password/code": {
            "post": {
                "description": "change password after confirm by user",
                "tags": [
                    "user"
                ],
                "summary": "confirm code by user",
                "operationId": "user-pass-code-post",
                "parameters": [
                    {
                        "description": "code and state for change pass",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_password_code_confirm_post.confirmCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "create user in database",
                "tags": [
                    "user"
                ],
                "summary": "create user",
                "operationId": "user-register-post",
                "parameters": [
                    {
                        "description": "user for create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_register_post.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/view.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "comment_post.createCommentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "integer"
                }
            }
        },
        "movie_post.createMovieRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "movie_put.updateMovieRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "user_change_password_put.userChangePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user_code_confirm_post.confirmCodeRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "user_login_post.loginUserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user_password_code_confirm_post.confirmCodeRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "user_register_post.createUserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "view.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "movie_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "view.CommentsResponse": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Comment"
                    }
                }
            }
        },
        "view.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "view.Movie": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "view.MoviesResponse": {
            "type": "object",
            "properties": {
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Movie"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "view.State": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string"
                }
            }
        },
        "view.Token": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}